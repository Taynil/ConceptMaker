@model  PagedList.IPagedList<ConceptMaker.Models.Ingredient>
    @using PagedList.Mvc;
    @{
        /**/

        ViewBag.Title = "ChoseIngredients";
    }




    @if (!Model.Any())
    {

        <h2>  <img src="~/Photos/configurefail.png" width="90" height="90" allign="left" /> Niestety nie odnaleziono nic pasującego do tej instancji :( </h2>

        @Html.ActionLink("Powrót do ponownego wyboru ->", "Index")
    }
    else
    {
        <h2> Pasujace elementy: <img src="~/Photos/configuresucces.png" width="90" height="90" allign="left" />  </h2>
        using (Html.BeginForm("ChoseIngredients", "MakeConcept", FormMethod.Get))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <p>
                Szukaj po nazwie: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                <input type="submit" value="Szukaj" />
            </p>

        }
    }

   
    <table class="table table-striped table-hover ">
        <tr>
            <th>

                @Html.ActionLink("Naza instancji bazowej", "ChoseIngredients", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
               Nazwa pojecia:

            </th>
            <th>
                Dopasowane po:

            </th>
            <th>
                Powrót:
            </th>
            <th>
                Dodać do koszyka?
            </th>
        </tr>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.BaseInstance.Name)

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BaseInstance.Concept.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubInstance.Name)
            </td>

            <td>
                @Html.ActionLink("Powrót ->", "", new { id = item.Id })

            </td>
            <td>
                <p class="button">
                    @Html.ActionLink("Dodaj do koszyka", "AddToCart",
                    "ShoppingCart", new { id = item.BaseInstanceId }, "")
                </p>
            </td>
        </tr>
        }
    </table>
    

    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))






